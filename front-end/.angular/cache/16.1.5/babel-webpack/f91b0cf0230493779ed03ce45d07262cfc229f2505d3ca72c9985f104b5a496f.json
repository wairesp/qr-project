{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\n/**\n * Sanitize HTML\n * Author: DaiDH\n */\nexport class SafePipe {\n  /**\n   * Pipe Constructor\n   *\n   * @param _sanitizer: DomSanitezer\n   */\n  // tslint:disable-next-line\n  constructor(_sanitizer) {\n    this._sanitizer = _sanitizer;\n  }\n  /**\n   * Transform\n   *\n   * @param value: string\n   * @param type: string\n   */\n  transform(value, type) {\n    switch (type) {\n      case 'html':\n        return this._sanitizer.bypassSecurityTrustHtml(value);\n      case 'style':\n        return this._sanitizer.bypassSecurityTrustStyle(value);\n      case 'script':\n        return this._sanitizer.bypassSecurityTrustScript(value);\n      case 'url':\n        return this._sanitizer.bypassSecurityTrustUrl(value);\n      case 'resourceUrl':\n        return this._sanitizer.bypassSecurityTrustResourceUrl(value);\n      default:\n        return this._sanitizer.bypassSecurityTrustHtml(value);\n    }\n  }\n}\nSafePipe.ɵfac = function SafePipe_Factory(t) {\n  return new (t || SafePipe)(i0.ɵɵdirectiveInject(i1.DomSanitizer, 16));\n};\nSafePipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"safe\",\n  type: SafePipe,\n  pure: true\n});","map":{"version":3,"names":["SafePipe","constructor","_sanitizer","transform","value","type","bypassSecurityTrustHtml","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","i0","ɵɵdirectiveInject","i1","DomSanitizer","pure"],"sources":["C:\\Users\\lsesp\\Desktop\\qr-project\\front-end\\src\\app\\safe.pipe.ts"],"sourcesContent":["// Angular\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport {\r\n  DomSanitizer,\r\n  SafeHtml,\r\n  SafeStyle,\r\n  SafeScript,\r\n  SafeUrl,\r\n  SafeResourceUrl,\r\n} from '@angular/platform-browser';\r\n\r\n/**\r\n * Sanitize HTML\r\n * Author: DaiDH\r\n */\r\n@Pipe({\r\n  name: 'safe',\r\n})\r\nexport class SafePipe implements PipeTransform {\r\n  /**\r\n   * Pipe Constructor\r\n   *\r\n   * @param _sanitizer: DomSanitezer\r\n   */\r\n  // tslint:disable-next-line\r\n  constructor(protected _sanitizer: DomSanitizer) {}\r\n\r\n  /**\r\n   * Transform\r\n   *\r\n   * @param value: string\r\n   * @param type: string\r\n   */\r\n  transform(\r\n    value: string,\r\n    type: string\r\n  ): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\r\n    switch (type) {\r\n      case 'html':\r\n        return this._sanitizer.bypassSecurityTrustHtml(value);\r\n      case 'style':\r\n        return this._sanitizer.bypassSecurityTrustStyle(value);\r\n      case 'script':\r\n        return this._sanitizer.bypassSecurityTrustScript(value);\r\n      case 'url':\r\n        return this._sanitizer.bypassSecurityTrustUrl(value);\r\n      case 'resourceUrl':\r\n        return this._sanitizer.bypassSecurityTrustResourceUrl(value);\r\n      default:\r\n        return this._sanitizer.bypassSecurityTrustHtml(value);\r\n    }\r\n  }\r\n}\r\n"],"mappings":";;AAWA;;;;AAOA,OAAM,MAAOA,QAAQ;EACnB;;;;;EAKA;EACAC,YAAsBC,UAAwB;IAAxB,KAAAA,UAAU,GAAVA,UAAU;EAAiB;EAEjD;;;;;;EAMAC,SAASA,CACPC,KAAa,EACbC,IAAY;IAEZ,QAAQA,IAAI;MACV,KAAK,MAAM;QACT,OAAO,IAAI,CAACH,UAAU,CAACI,uBAAuB,CAACF,KAAK,CAAC;MACvD,KAAK,OAAO;QACV,OAAO,IAAI,CAACF,UAAU,CAACK,wBAAwB,CAACH,KAAK,CAAC;MACxD,KAAK,QAAQ;QACX,OAAO,IAAI,CAACF,UAAU,CAACM,yBAAyB,CAACJ,KAAK,CAAC;MACzD,KAAK,KAAK;QACR,OAAO,IAAI,CAACF,UAAU,CAACO,sBAAsB,CAACL,KAAK,CAAC;MACtD,KAAK,aAAa;QAChB,OAAO,IAAI,CAACF,UAAU,CAACQ,8BAA8B,CAACN,KAAK,CAAC;MAC9D;QACE,OAAO,IAAI,CAACF,UAAU,CAACI,uBAAuB,CAACF,KAAK,CAAC;;EAE3D;;AAjCWJ,QAAQ,C;mBAARA,QAAQ,EAAAW,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA;AAAA;AAARd,QAAQ,C;;QAARA,QAAQ;EAAAe,IAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}