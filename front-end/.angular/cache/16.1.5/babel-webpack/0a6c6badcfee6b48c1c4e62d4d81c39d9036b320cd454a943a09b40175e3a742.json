{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport * as data from './data.json';\nexport let AppComponent = class AppComponent {\n  //injects the service\n  constructor(qrcode) {\n    this.qrcode = qrcode;\n    this.title = \"DieLess\";\n    this.dogData = data.default;\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#front_and_back_camera\n    this.config = {\n      constraints: {\n        video: {\n          width: window.innerWidth,\n          height: window.innerHeight\n        }\n      },\n      canvasStyles: [{\n        lineWidth: 1,\n        /*85 represents transparency*/\n        fillStyle: '#00949485',\n        strokeStyle: '#00949485'\n      }, {\n        font: '17px serif',\n        fillStyle: '#ffffff',\n        strokeStyle: '#ffffff'\n      }],\n      isBeep: false,\n      fps: 30,\n      src: '../assets/cat1.jpg'\n    };\n    //holds results\n    this.qrCodeResult = [];\n    this.qrCodeResult2 = [];\n  }\n  //coment the handle to start automatically\n  ngAfterViewInit() {\n    this.action.isReady.subscribe(res => {\n      this.handle(this.action, 'start');\n    });\n  }\n  //when a event is emited to the scanner logs it into the console\n  //the line above console pauses once it gets a qr\n  onEvent(e, action) {\n    if (e && action) {\n      action.pause();\n      console.log(e); // This logs the scanned QR code data to the console\n      // Convert the Int8Array to a string\n      let decoder = new TextDecoder();\n      let id = decoder.decode(new Uint8Array(e[0].data));\n      console.log(id); // This logs the ID to the console\n      // Find the dog data associated with the scanned ID\n      this.selectedDog = this.dogData.find(dog => dog.id === id);\n      // Log the selected dog data to the console\n      console.log(this.selectedDog);\n    }\n  }\n  //USED TO START STOP PLAY OR PAUSE THE SCANNER\n  handle(action, fn) {\n    const playDeviceFacingBack = devices => {\n      // front camera or back camera check here!\n      const device = devices.find(f => /back|rear|environment/gi.test(f.label)); // Default Back Facing Camera\n      action.playDevice(device ? device.deviceId : devices[0].deviceId);\n    };\n    if (fn === 'start') {\n      action[fn](playDeviceFacingBack).subscribe(r => console.log(fn, r), alert);\n    } else {\n      action[fn]().subscribe(r => console.log(fn, r), alert);\n    }\n  }\n  //merged method\n  handleStartOrUnpause(action) {\n    if (!action.isStart) {\n      // If the scanner is not started, start it\n      this.handle(action, 'start');\n    } else if (action.isPause) {\n      // If the scanner is started but paused, unpause it\n      this.handle(action, 'play');\n    }\n  }\n  //to upload files meh\n  onSelects(files) {\n    this.qrcode.loadFiles(files, 0.5).subscribe(res => {\n      this.qrCodeResult = res;\n    });\n  }\n  onSelects2(files) {\n    this.qrcode.loadFilesToScan(files, this.config, 0.5).subscribe(res => {\n      console.log(res);\n      this.qrCodeResult2 = res;\n    });\n  }\n};\n__decorate([ViewChild('action')], AppComponent.prototype, \"action\", void 0);\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);","map":{"version":3,"names":["Component","ViewChild","data","AppComponent","constructor","qrcode","title","dogData","default","config","constraints","video","width","window","innerWidth","height","innerHeight","canvasStyles","lineWidth","fillStyle","strokeStyle","font","isBeep","fps","src","qrCodeResult","qrCodeResult2","ngAfterViewInit","action","isReady","subscribe","res","handle","onEvent","e","pause","console","log","decoder","TextDecoder","id","decode","Uint8Array","selectedDog","find","dog","fn","playDeviceFacingBack","devices","device","f","test","label","playDevice","deviceId","r","alert","handleStartOrUnpause","isStart","isPause","onSelects","files","loadFiles","onSelects2","loadFilesToScan","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\lsesp\\Desktop\\qr-project\\front-end\\src\\app\\app.component.ts"],"sourcesContent":["import { AfterViewInit, Component, ViewChild } from '@angular/core';\r\nimport {\r\n  ScannerQRCodeConfig,\r\n  ScannerQRCodeResult,\r\n  NgxScannerQrcodeService,\r\n  NgxScannerQrcodeComponent,\r\n  ScannerQRCodeSelectedFiles,\r\n} from 'ngx-scanner-qrcode';\r\nimport * as data from './data.json';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent implements AfterViewInit {\r\n  title = \"DieLess\";\r\n  public dogData: any = (data as any).default;\r\n  public selectedDog: any;\r\n\r\n  // https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#front_and_back_camera\r\n  public config: ScannerQRCodeConfig = {\r\n    constraints: {\r\n      video: {\r\n        width: window.innerWidth,\r\n        height: window.innerHeight\r\n      },\r\n    },\r\n   \r\n    canvasStyles: [\r\n      { /* layer */\r\n        lineWidth: 1,\r\n        /*85 represents transparency*/\r\n        fillStyle: '#00949485',\r\n        strokeStyle: '#00949485',\r\n      },\r\n      { /* text */\r\n        font: '17px serif',\r\n        fillStyle: '#ffffff',\r\n        strokeStyle: '#ffffff',\r\n      }\r\n    ],\r\n    isBeep: false,\r\n    fps:30,\r\n    src:'../assets/cat1.jpg'\r\n  };\r\n  \r\n  //holds results\r\n  public qrCodeResult: ScannerQRCodeSelectedFiles[] = [];\r\n  public qrCodeResult2: ScannerQRCodeSelectedFiles[] = [];\r\n\r\n  //reference to the component\r\n  @ViewChild('action') action!: NgxScannerQrcodeComponent;\r\n\r\n  //injects the service\r\n  constructor(private qrcode: NgxScannerQrcodeService) { }\r\n\r\n  //coment the handle to start automatically\r\n  ngAfterViewInit(): void {\r\n    this.action.isReady.subscribe((res: any) => {\r\n       this.handle(this.action, 'start');\r\n    });\r\n  }\r\n\r\n  //when a event is emited to the scanner logs it into the console\r\n  //the line above console pauses once it gets a qr\r\n  public onEvent(e: ScannerQRCodeResult[], action?: any): void {\r\n    if (e && action) {\r\n      action.pause();\r\n      console.log(e); // This logs the scanned QR code data to the console\r\n  \r\n      // Convert the Int8Array to a string\r\n      let decoder = new TextDecoder();\r\n      let id = decoder.decode(new Uint8Array(e[0].data));\r\n      console.log(id); // This logs the ID to the console\r\n\r\n      // Find the dog data associated with the scanned ID\r\n      this.selectedDog = this.dogData.find((dog: any) => dog.id === id);\r\n\r\n      // Log the selected dog data to the console\r\n      console.log(this.selectedDog);\r\n    }\r\n  }\r\n\r\n  //USED TO START STOP PLAY OR PAUSE THE SCANNER\r\n  public handle(action: any, fn: string): void {\r\n    const playDeviceFacingBack = (devices: any[]) => {\r\n      // front camera or back camera check here!\r\n      const device = devices.find(f => (/back|rear|environment/gi.test(f.label))); // Default Back Facing Camera\r\n      action.playDevice(device ? device.deviceId : devices[0].deviceId);\r\n    }\r\n\r\n    if (fn === 'start') {\r\n      action[fn](playDeviceFacingBack).subscribe((r: any) => console.log(fn, r), alert);\r\n    } else {\r\n      action[fn]().subscribe((r: any) => console.log(fn, r), alert);\r\n    }\r\n  }\r\n\r\n  //merged method\r\n  public handleStartOrUnpause(action: any): void {\r\n    if (!action.isStart) {\r\n      // If the scanner is not started, start it\r\n      this.handle(action, 'start');\r\n    } else if (action.isPause) {\r\n      // If the scanner is started but paused, unpause it\r\n      this.handle(action, 'play');\r\n    }\r\n  }\r\n\r\n  //to upload files meh\r\n  public onSelects(files: any) {\r\n    this.qrcode.loadFiles(files, 0.5).subscribe((res: ScannerQRCodeSelectedFiles[]) => {\r\n      this.qrCodeResult = res;\r\n    });\r\n  }\r\n\r\n  public onSelects2(files: any) {\r\n    this.qrcode.loadFilesToScan(files, this.config, 0.5).subscribe((res: ScannerQRCodeSelectedFiles[]) => {\r\n      console.log(res);\r\n      this.qrCodeResult2 = res;\r\n    });\r\n  }\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}