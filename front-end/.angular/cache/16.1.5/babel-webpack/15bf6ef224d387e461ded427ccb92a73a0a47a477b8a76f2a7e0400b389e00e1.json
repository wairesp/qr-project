{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nexport let AppComponent = class AppComponent {\n  //injects the service\n  constructor(qrcode) {\n    this.qrcode = qrcode;\n    this.title = \"DieLess\";\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#front_and_back_camera\n    this.config = {\n      constraints: {\n        video: {\n          width: window.innerWidth,\n          height: window.innerHeight\n        }\n      },\n      canvasStyles: [{\n        lineWidth: 1,\n        /*85 represents transparency*/\n        fillStyle: '#00949485',\n        strokeStyle: '#00949485'\n      }, {\n        font: '17px serif',\n        fillStyle: '#ffffff',\n        strokeStyle: '#ffffff'\n      }],\n      isBeep: false,\n      fps: 30,\n      src: '../assets/cat1.jpg'\n    };\n    this.isScanned = false;\n    //holds results\n    this.qrCodeResult = [];\n    this.qrCodeResult2 = [];\n  }\n  //coment the handle to start automatically\n  ngAfterViewInit() {\n    this.action.isReady.subscribe(res => {\n      this.handle(this.action, 'start');\n    });\n  }\n  //when a event is emited to the scanner logs it into the console\n  //the line above console pauses once it gets a qr\n  onEvent(e, action) {\n    if (e) {\n      this.isScanned = true;\n      action && action.pause();\n    }\n    console.log(e);\n  }\n  //USED TO START STOP PLAY OR PAUSE THE SCANNER\n  handle(action, fn) {\n    const playDeviceFacingBack = devices => {\n      // front camera or back camera check here!\n      const device = devices.find(f => /back|rear|environment/gi.test(f.label)); // Default Back Facing Camera\n      action.playDevice(device ? device.deviceId : devices[0].deviceId);\n    };\n    if (fn === 'start') {\n      action[fn](playDeviceFacingBack).subscribe(r => console.log(fn, r), alert);\n    } else {\n      action[fn]().subscribe(r => console.log(fn, r), alert);\n    }\n  }\n  //merged method\n  handleStartOrUnpause(action) {\n    if (!action.isStart) {\n      this.isScanned = false;\n      // If the scanner is not started, start it\n      this.handle(action, 'start');\n    } else if (action.isPause) {\n      // If the scanner is started but paused, unpause it\n      this.handle(action, 'play');\n    }\n  }\n  //to upload files meh\n  onSelects(files) {\n    this.qrcode.loadFiles(files, 0.5).subscribe(res => {\n      this.qrCodeResult = res;\n    });\n  }\n  onSelects2(files) {\n    this.qrcode.loadFilesToScan(files, this.config, 0.5).subscribe(res => {\n      console.log(res);\n      this.qrCodeResult2 = res;\n    });\n  }\n};\n__decorate([ViewChild('action')], AppComponent.prototype, \"action\", void 0);\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);","map":{"version":3,"names":["Component","ViewChild","AppComponent","constructor","qrcode","title","config","constraints","video","width","window","innerWidth","height","innerHeight","canvasStyles","lineWidth","fillStyle","strokeStyle","font","isBeep","fps","src","isScanned","qrCodeResult","qrCodeResult2","ngAfterViewInit","action","isReady","subscribe","res","handle","onEvent","e","pause","console","log","fn","playDeviceFacingBack","devices","device","find","f","test","label","playDevice","deviceId","r","alert","handleStartOrUnpause","isStart","isPause","onSelects","files","loadFiles","onSelects2","loadFilesToScan","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\lsesp\\Desktop\\qr-project\\front-end\\src\\app\\app.component.ts"],"sourcesContent":["import { AfterViewInit, Component, ViewChild } from '@angular/core';\nimport {\n  ScannerQRCodeConfig,\n  ScannerQRCodeResult,\n  NgxScannerQrcodeService,\n  NgxScannerQrcodeComponent,\n  ScannerQRCodeSelectedFiles,\n} from 'ngx-scanner-qrcode';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements AfterViewInit {\n  title = \"DieLess\";\n  \n  // https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#front_and_back_camera\n  public config: ScannerQRCodeConfig = {\n    constraints: {\n      video: {\n        width: window.innerWidth,\n        height: window.innerHeight\n      },\n    },\n   \n    canvasStyles: [\n      { /* layer */\n        lineWidth: 1,\n        /*85 represents transparency*/\n        fillStyle: '#00949485',\n        strokeStyle: '#00949485',\n      },\n      { /* text */\n        font: '17px serif',\n        fillStyle: '#ffffff',\n        strokeStyle: '#ffffff',\n      }\n    ],\n    isBeep: false,\n    fps:30,\n    src:'../assets/cat1.jpg'\n  };\n  public isScanned = false;\n  //holds results\n  public qrCodeResult: ScannerQRCodeSelectedFiles[] = [];\n  public qrCodeResult2: ScannerQRCodeSelectedFiles[] = [];\n\n  //reference to the component\n  @ViewChild('action') action!: NgxScannerQrcodeComponent;\n\n  //injects the service\n  constructor(private qrcode: NgxScannerQrcodeService) { }\n\n  //coment the handle to start automatically\n  ngAfterViewInit(): void {\n    this.action.isReady.subscribe((res: any) => {\n       this.handle(this.action, 'start');\n    });\n  }\n\n  //when a event is emited to the scanner logs it into the console\n  //the line above console pauses once it gets a qr\n  public onEvent(e: ScannerQRCodeResult[], action?: any): void {\n    if (e) {\n      this.isScanned = true;\n      action && action.pause();\n    }\n    console.log(e);\n  }\n\n  //USED TO START STOP PLAY OR PAUSE THE SCANNER\n  public handle(action: any, fn: string): void {\n    const playDeviceFacingBack = (devices: any[]) => {\n      // front camera or back camera check here!\n      const device = devices.find(f => (/back|rear|environment/gi.test(f.label))); // Default Back Facing Camera\n      action.playDevice(device ? device.deviceId : devices[0].deviceId);\n    }\n\n    if (fn === 'start') {\n      action[fn](playDeviceFacingBack).subscribe((r: any) => console.log(fn, r), alert);\n    } else {\n      action[fn]().subscribe((r: any) => console.log(fn, r), alert);\n    }\n  }\n\n  //merged method\n  public handleStartOrUnpause(action: any): void {\n    if (!action.isStart) {\n      this.isScanned = false;\n      // If the scanner is not started, start it\n      this.handle(action, 'start');\n    } else if (action.isPause) {\n      // If the scanner is started but paused, unpause it\n      this.handle(action, 'play');\n    }\n  }\n\n  //to upload files meh\n  public onSelects(files: any) {\n    this.qrcode.loadFiles(files, 0.5).subscribe((res: ScannerQRCodeSelectedFiles[]) => {\n      this.qrCodeResult = res;\n    });\n  }\n\n  public onSelects2(files: any) {\n    this.qrcode.loadFilesToScan(files, this.config, 0.5).subscribe((res: ScannerQRCodeSelectedFiles[]) => {\n      console.log(res);\n      this.qrCodeResult2 = res;\n    });\n  }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}